#include <stdio.h>
#include <string.h>
#include <stdlib.h>

struct studentNode {
    char name[20];
    int age;
    char sex;
    float gpa;
    struct studentNode *next;
};

void showAll(struct studentNode *walk);
struct studentNode *addNode(struct studentNode **start, char n[], int a, char s, float g);
void insNode(struct studentNode *prevNode, char n[], int a, char s, float g);
struct studentNode *delNode(struct studentNode **start, struct studentNode *prevNode);

int main() {
    struct studentNode *start = NULL;
    struct studentNode *now;

    now = addNode(&start, "one", 6, 'M', 3.11);
    showAll(start);

    now = addNode(&start, "two", 8, 'F', 3.22);
    showAll(start);

    insNode(now, "three", 10, 'M', 3.33);
    showAll(start);

    insNode(now, "four", 12, 'F', 3.44);
    showAll(start);

    now = delNode(&start, now);
    showAll(start);

    return 0;
}

void showAll(struct studentNode *walk) {
    while (walk != NULL) {
        printf("%s ", walk->name);
        walk = walk->next;
    }
    printf("\n");
}

struct studentNode *addNode(struct studentNode **start, char n[], int a, char s, float g) {
    struct studentNode *newNode = (struct studentNode *)malloc(sizeof(struct studentNode));
    if (newNode == NULL) {
        printf("Memory allocation failed.\n");
        exit(1);
    }

    strcpy(newNode->name, n);
    newNode->age = a;
    newNode->sex = s;
    newNode->gpa = g;
    newNode->next = NULL;

    if (*start == NULL) {
        *start = newNode;
    } else {
        struct studentNode *temp = *start;
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = newNode;
    }

    return newNode;
}

void insNode(struct studentNode *prevNode, char n[], int a, char s, float g) {
    if (prevNode == NULL) {
        printf("Previous node cannot be NULL.\n");
        return;
    }

    struct studentNode *newNode = (struct studentNode *)malloc(sizeof(struct studentNode));
    if (newNode == NULL) {
        printf("Memory allocation failed.\n");
        exit(1);
    }

    strcpy(newNode->name, n);
    newNode->age = a;
    newNode->sex = s;
    newNode->gpa = g;

    newNode->next = prevNode->next;
    prevNode->next = newNode;
}

struct studentNode *delNode(struct studentNode **start, struct studentNode *prevNode) {
    if (*start == NULL || prevNode == NULL) {
        printf("List is empty or previous node is NULL.\n");
        return NULL;
    }

    if (prevNode == *start) {
        *start = prevNode->next;
        free(prevNode);
        return *start;
    }

    struct studentNode *temp = *start;
    while (temp != NULL && temp->next != prevNode) {
        temp = temp->next;
    }

    if (temp == NULL) {
        printf("Previous node not found in the list.\n");
        return NULL;
    }

    temp->next = prevNode->next;
    free(prevNode);
    return temp->next;
}
